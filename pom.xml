<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.xiaomi.infra.galaxy.fds</groupId>
  <artifactId>galaxy-fds-spark-cleaner</artifactId>
  <version>1.0-SNAPSHOT</version>
  <description>Galaxy FDS cleaner using spark</description>
  <name>Spark FDS cleaner</name>
  <packaging>jar</packaging>

  <properties>
    <java.version>1.8</java.version>
    <scala.major.version>2.10</scala.major.version>
    <scala.version>2.10.2</scala.version>
    <spark.version>1.6.1-mdh1.6.1.2</spark.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <hadoop.version>2.6.0</hadoop.version>
    <hbase.version>0.94.11-mdh1.2.42.29</hbase.version>
    <infra-hbase-client.version>1.1.5.1</infra-hbase-client.version>
    <fds.version>1.16-SNAPSHOT</fds.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hbase</groupId>
        <artifactId>hbase</artifactId>
        <version>${hbase.version}</version>
      </dependency>
      <dependency>
        <groupId>com.xiaomi.infra</groupId>
        <artifactId>hbase-client</artifactId>
        <version>${infra-hbase-client.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.8.2</version>
    </dependency>
    <dependency>
      <groupId>org.joda</groupId>
      <artifactId>joda-convert</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>com.github.scopt</groupId>
      <artifactId>scopt_${scala.major.version}</artifactId>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <type>jar</type>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>asm</groupId>
          <artifactId>asm</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.jboss.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase</artifactId>
      <version>${hbase.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.jruby</groupId>
          <artifactId>jruby-complete</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.thrift</groupId>
          <artifactId>libthrift</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-json</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-contribs</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-test-framework</artifactId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.xiaomi.infra</groupId>
      <artifactId>hbase-client</artifactId>
      <version>${infra-hbase-client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-json</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.xiaomi</groupId>
          <artifactId>xiaomi-common-zookeeper</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.thrift</groupId>
          <artifactId>thrift</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.10</artifactId>
      <version>${spark.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.10</artifactId>
      <version>${spark.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.10</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.xiaomi.infra.galaxy</groupId>
      <artifactId>galaxy-fds-server</artifactId>
      <version>${fds.version}</version>
    </dependency>
    <dependency>
      <groupId>com.xiaomi.infra.galaxy</groupId>
      <artifactId>galaxy-fds-offline</artifactId>
      <version>${fds.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>create-repository</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/jar-with-dependencies.xml</descriptor>
          </descriptors>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <repositoryLayout>flat</repositoryLayout>
          <repositoryName>lib</repositoryName>
          <assembleDirectory>
            ${project.build.directory}/${project.artifactId}-${project.version}
          </assembleDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <encoding>UTF-8</encoding>
          <maxmem>1024m</maxmem>
          <fork>true</fork>
          <compilerArgs>
            <arg>-Xlint:all,-serial,-path</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.12</version>
        <configuration>
          <includes>
            <include>**/*Suite.class</include>
            <include>**/*Test.class</include>
            <include>**/*Tests.class</include>
            <include>**/*Spec.class</include>
            <include>**/*Specs.class</include>
          </includes>
        </configuration>
      </plugin>
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-antrun-plugin</artifactId>-->
        <!--<executions>-->
          <!--<execution>-->
            <!--<id>tar</id>-->
            <!--<phase>package</phase>-->
            <!--<goals>-->
              <!--<goal>run</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
              <!--<tasks>-->
                <!--<echo file="${project.build.directory}/copynativelibs.sh">-->
                  <!--run() {-->
                  <!--echo "\$ ${@}"-->
                  <!--"${@}"-->
                  <!--res=$?-->
                  <!--if [ $res != 0 ]; then-->
                  <!--echo-->
                  <!--echo "Failed!"-->
                  <!--echo-->
                  <!--exit $res-->
                  <!--fi-->
                  <!--}-->

                  <!--ROOT=`cd ${basedir}/;pwd`-->
                  <!--echo-->
                  <!--echo "Current directory `pwd`"-->
                  <!--echo-->
                  <!--run rm -rf fds-cleaner-spark-${project.version}-->
                  <!--run mkdir fds-cleaner-spark-${project.version}-->
                  <!--run cd fds-cleaner-spark-${project.version}-->
                  <!--run cp -r-->
                  <!--$ROOT/target/galaxy-fds-spark-cleaner-${project.version}/lib .-->
                  <!--run cp -r $ROOT/target/*.jar .-->
                  <!--run rm -f ./lib/original-galaxy-fds-spark-cleaner-*.jar-->
                  <!--echo "project version is: ${project.version}"-->

                <!--</echo>-->
                <!--<exec executable="sh" dir="${project.build.directory}"-->
                      <!--failonerror="true">-->
                  <!--<arg line="./copynativelibs.sh"/>-->
                <!--</exec>-->
                <!--<echo file="${project.build.directory}/maketar.sh">-->
                  <!--run() {-->
                  <!--echo "\$ ${@}"-->
                  <!--"${@}"-->
                  <!--res=$?-->
                  <!--if [ $res != 0 ]; then-->
                  <!--echo-->
                  <!--echo "Failed!"-->
                  <!--echo-->
                  <!--exit $res-->
                  <!--fi-->
                  <!--}-->

                  <!--run tar czf fds-cleaner-spark-${project.version}.tar.gz-->
                  <!--fds-cleaner-spark-${project.version}-->
                  <!--echo-->
                  <!--echo "tar available at:-->
                  <!--${project.build.directory}/fds-cleaner-spark-${project.version}.tar.gz"-->
                  <!--echo-->
                <!--</echo>-->
                <!--<exec executable="sh" dir="${project.build.directory}"-->
                      <!--failonerror="yes">-->
                  <!--<arg line="./maketar.sh"/>-->
                <!--</exec>-->
              <!--</tasks>-->
            <!--</configuration>-->
          <!--</execution>-->
        <!--</executions>-->
      <!--</plugin>-->
    </plugins>
  </build>
</project>